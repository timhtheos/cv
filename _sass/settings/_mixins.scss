/**
 * Mixin to display flex.
 */
@mixin display-flex($suffix: "") {
  display: -webkit-box  #{$suffix};     /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box     #{$suffix};     /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox  #{$suffix};     /* TWEENER - IE 10 */
  display: -webkit-flex #{$suffix};     /* NEW - Chrome */
  display: flex         #{$suffix};     /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

/**
 * Mixin to flex order.
 */
@mixin flex-order($order) {
  -webkit-box-ordinal-group: #{$order}; /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-box-ordinal-group: #{$order};    /* OLD - Firefox 19- */
  -ms-flex-order: #{$order};            /* TWEENER - IE 10 */
  -webkit-order: #{$order};             /* NEW - Chrome */
  order: #{$order};                     /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

/**
 * Mixin for other flex properties.
 */
@mixin flex($prop, $val) {
  -webkit-#{$prop}: #{$val};            /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-#{$prop}: #{$val};               /* OLD - Firefox 19- (buggy but mostly works) */
  #{$prop}: #{$val};                    /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

/**
 * Mixin to generate fontawesome icons.
 */
// @mixin iconize($icon, $using: "fa", $position: "before") {
@mixin iconize($icon, $position: "before") {
  font-family: inherit;

  @if $position == "before" {
    @extend .fa;
    @extend .fa-#{$icon};
  }
  @else if $position == "after" {
    &:after {
      @extend .fa-#{$icon}:before;
    }
  }

  // Reinforce font used before, after.
  &:#{$position} {
    font-family: "fontawesome";
  }
}

@mixin dont-break-out() {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}
